{"version":3,"sources":["InputWithStatus.js","Login.js","App.js","index.js"],"names":["InputWithStatus","id","name","type","val","placeholder","onChange","useState","showPass","setShowPass","passwordType","useMemo","className","classnames","bx","autoComplete","value","onClick","isEmail","email","test","Login","theme","setTheme","localStorage","getItem","setEmail","password","setPassword","error","loading","isEmailClicked","setIsEmailClicked","isPasswordClicked","setIsPasswordClicked","emailError","setEmailError","passwordError","setPasswordError","setValidations","setSuccessFor","input","parentElement","setErrorFor","handleSubmit","e","undefined","console","log","setItem","checkBeforeSubmit","preventDefault","valids","trim","filledAreas","reduce","acc","cur","emailEl","document","getElementById","passwordEl","useEffect","body","classList","remove","add","Row","Col","Card","style","borderRadius","width","paddingTop","paddingBottom","height","xs","fontSize","fontWeight","color","CardBody","background","Form","onSubmit","Alert","target","length","Input","Label","for","Button","disabled","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.17c429cd.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nfunction InputWithStatus({\n  id, name, type, val, placeholder, onChange,\n}) {\n  const [showPass, setShowPass] = useState(false);\n  const passwordType = useMemo(() => {\n    if (showPass) {\n      return 'text';\n    }\n    return 'password';\n  }, [showPass, setShowPass]);\n\n  return (\n    <div className=\"input-with-status\">\n      <i\n        id={`icon-${id}`}\n        className={classnames({\n          bx: true,\n          'input-icon': true,\n          'bx-envelope': id === 'email',\n          'bx-key': id === 'password',\n        })}\n      />\n      <input\n        autoComplete=\"off\"\n        id={id}\n        name={name}\n        type={type === 'password' ? passwordType : type}\n        onChange={onChange}\n        value={val}\n        placeholder={placeholder}\n      />\n      {id !== 'password' && <i className=\"bx bx-error-circle\" />}\n      {id === 'password' && (\n        /* eslint-disable-next-line */\n        <i\n          className={classnames({\n            bx: true,\n            'bx-hide': !showPass,\n            'bx-show': showPass,\n          })}\n          onClick={() => setShowPass(!showPass)}\n        />\n      )}\n    </div>\n  );\n}\n\nInputWithStatus.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  val: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default InputWithStatus;\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Form,\n  Alert,\n  Button,\n  Input,\n  Label,\n} from 'reactstrap';\nimport InputWithStatus from './InputWithStatus';\nimport './Login.css';\n\nfunction isEmail(email) {\n  // eslint-disable-next-line\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\n}\n\nfunction Login() {\n  const [theme, setTheme] = useState('light');\n  const [email, setEmail] = useState(localStorage.getItem('email') ?? '');\n  const [password, setPassword] = useState('');\n  // eslint-disable-next-line\n  const [error, setError] = useState(false);\n  // eslint-disable-next-line\n  const [loading, setLoading] = useState(false);\n\n  const [isEmailClicked, setIsEmailClicked] = useState(false);\n  const [isPasswordClicked, setIsPasswordClicked] = useState(false);\n  // eslint-disable-next-line\n  const [emailError, setEmailError] = useState('');\n  // eslint-disable-next-line\n  const [passwordError, setPasswordError] = useState('');\n  // eslint-disable-next-line\n  const [validations, setValidations] = useState([false, false, false, false, false]);\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n      document.body.classList.remove('light-theme');\n      document.body.classList.add('dark-theme');\n    } else {\n      setTheme('light');\n      document.body.classList.remove('dark-theme');\n      document.body.classList.add('light-theme');\n    }\n  };\n  const setSuccessFor = (input) => {\n    const inputWithStatus = input.parentElement;\n    inputWithStatus.className = 'input-with-status';\n  };\n  const setErrorFor = (input) => {\n    const inputWithStatus = input.parentElement;\n    inputWithStatus.className = 'input-with-status error';\n  };\n\n  const handleSubmit = (e) => {\n    if (e !== undefined) {\n      console.log(email);\n      console.log(password);\n      if (isEmail(email)) {\n        console.log('valid email');\n      }\n      localStorage.setItem('email', email);\n    }\n  };\n\n  const checkBeforeSubmit = (e = undefined) => {\n    if (e !== undefined) {\n      e.preventDefault();\n    }\n    const valids = [\n      (isEmail(email.trim())),\n      password.trim() !== '',\n    ];\n    setValidations(valids);\n    const filledAreas = valids.reduce((acc, cur) => acc + cur);\n\n    const emailEl = document.getElementById('email');\n    const passwordEl = document.getElementById('password');\n    if (isEmailClicked) {\n      if (email.trim() === '') {\n        setErrorFor(emailEl);\n        setEmailError('Email cannot be blank');\n      } else if (!isEmail(email.trim())) {\n        setErrorFor(emailEl);\n        setEmailError('Please enter a valid email');\n      } else {\n        setSuccessFor(emailEl);\n        setEmailError('');\n      }\n    }\n\n    if (isPasswordClicked) {\n      if (password.trim() === '') {\n        setErrorFor(passwordEl);\n        setPasswordError('Password cannot be blank');\n      } else {\n        setSuccessFor(passwordEl, 'Enter password');\n        setPasswordError('');\n      }\n    }\n    if (filledAreas === 2) {\n      handleSubmit(e);\n    }\n  };\n\n  useEffect(() => {\n    checkBeforeSubmit();\n  }, [email, password]);\n\n  return (\n    <div className=\"login-container mx-0 px-4\">\n      <div className=\"w-100 pt-3\">\n        {/* eslint-disable-next-line */}\n        <label className=\"switch d-flex ml-auto\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            onChange={() => {\n              toggleTheme();\n            }}\n          />\n          <span className=\"slider round\" />\n          <i className={classnames({\n            bx: true,\n            'bxs-moon': theme === 'dark',\n            'bxs-sun': theme === 'light',\n            'theme-icon': true,\n          })}\n          />\n        </label>\n      </div>\n      <Row className=\"justify-content-center\">\n        <Col\n          className=\"pl-0 login-col pr-0\"\n        >\n          <Card\n            className=\"overflow-hidden login-card\"\n            style={{\n              borderRadius: '0px 4px 4px 0px',\n              width: '100%',\n            }}\n          >\n            <div>\n              <Row style={{\n                paddingTop: '17px',\n                paddingBottom: '15px',\n                height: '10px',\n              }}\n              >\n                <Col xs=\"12\">\n                  <div\n                    className=\"p-4 d-flex justify-content-start\"\n                    style={{\n                      fontSize: '16px',\n                      fontWeight: 500,\n                      color: '#495057',\n                    }}\n                  >\n                    <p className=\"ml-1\">\n                      Sign in to continue to ABC Company\n                    </p>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n            <CardBody\n              className=\"pt-4 login-cardbody\"\n              style={{\n                background: 'white',\n                borderRadius: '4px',\n              }}\n            >\n              <div className=\"p-2 pt-4\">\n                <Form id=\"login-form\" className=\"form-horizontal\" onSubmit={checkBeforeSubmit}>\n                  {error && (\n                  <Alert color=\"danger\">Invalid email or password.</Alert>\n                  )}\n                  <div className=\"form-group\">\n\n                    <InputWithStatus\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      val={email}\n                      onChange={(e) => {\n                        setIsEmailClicked(true);\n                        setEmail(e.target.value);\n                      }}\n                      placeholder=\"Email\"\n                    />\n                    <p className=\"error-text\">{emailError}</p>\n\n                  </div>\n                  <div className={classnames({\n                    'form-group': true,\n                    'pb-1': passwordError.length === 0,\n                  })}\n                  >\n                    <InputWithStatus\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      val={password}\n                      onChange={(e) => {\n                        setIsPasswordClicked(true);\n                        setPassword(e.target.value);\n                      }}\n                      placeholder=\"Password\"\n                    />\n                    <p className=\"error-text\">{passwordError}</p>\n\n                  </div>\n                  <Row className=\"mt-4\">\n                    <Col className=\"d-flex align-items-center remember-me\">\n                      <Input\n                        id=\"remember-me-checkbox\"\n                        name=\"remember-me\"\n                        type=\"checkbox\"\n                      />\n                      <Label for=\"remember-me-checkbox\" className=\"btn-forgot text-muted\">Remember me</Label>\n                    </Col>\n                    <Col className=\"btn-forgot\">\n                      <Button color=\"link\" className=\"btn-link text-muted\">\n                        Forgot password?\n                      </Button>\n                    </Col>\n                  </Row>\n                  <div className=\"mt-4\">\n                    <Button\n                      id=\"signin-btn\"\n                      color=\"primary\"\n                      className=\"btn btn-primary btn-block waves-effect waves-light\"\n                      type=\"submit\"\n                      disabled={loading}\n                    >\n                      Sign In\n                    </Button>\n                  </div>\n                </Form>\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport './App.css';\nimport Login from './Login';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}