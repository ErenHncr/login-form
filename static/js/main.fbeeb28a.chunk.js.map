{"version":3,"sources":["InputWithStatus.js","assets/flags/en.svg","assets/flags/de.svg","assets/flags/fr.svg","assets/flags/tr.svg","FlagItem.js","Login.js","App.js","index.js"],"names":["InputWithStatus","id","name","type","val","placeholder","onChange","useState","showPass","setShowPass","passwordType","useMemo","className","classnames","bx","autoComplete","value","onClick","FlagItem","language","EN","currentFlag","setCurrentFlag","useEffect","flag","DE","FR","TR","src","width","alt","style","borderRadius","isEmail","email","test","Login","setLanguage","theme","setTheme","localStorage","getItem","setEmail","isDropdownOpen","setIsDropdownOpen","password","setPassword","error","setError","loading","isEmailClicked","setIsEmailClicked","isPasswordClicked","setIsPasswordClicked","emailError","setEmailError","passwordError","setPasswordError","setValidations","remember","setRemember","setSuccessFor","input","parentElement","setErrorFor","handleSubmit","e","undefined","console","log","setItem","checkBeforeSubmit","preventDefault","valids","trim","filledAreas","reduce","acc","cur","emailEl","document","getElementById","passwordEl","languages","blankEmailError","invalidEmailError","blankPasswordError","title","header","Dropdown","color","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","body","classList","remove","add","Row","Col","Card","paddingTop","paddingBottom","height","xs","fontSize","fontWeight","whiteSpace","subheaderWelcome","subheader","CardBody","background","includes","Form","onSubmit","Alert","errorAfterSubmit","emailPlaceholder","target","length","passwordPlaceholder","Input","checked","Label","for","rememberMe","Button","forgotPassword","disabled","haveAccount","haveAccountButton","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fbeeb28a.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nfunction InputWithStatus({\n  id, name, type, val, placeholder, onChange,\n}) {\n  const [showPass, setShowPass] = useState(false);\n  const passwordType = useMemo(() => {\n    if (showPass) {\n      return 'text';\n    }\n    return 'password';\n  }, [showPass, setShowPass]);\n\n  return (\n    <div className=\"input-with-status\">\n      <i\n        id={`icon-${id}`}\n        className={classnames({\n          bx: true,\n          'input-icon': true,\n          'bx-envelope': id === 'email',\n          'bx-key': id === 'password',\n        })}\n      />\n      <input\n        autoComplete=\"off\"\n        id={id}\n        name={name}\n        type={type === 'password' ? passwordType : type}\n        onChange={onChange}\n        value={val}\n        placeholder={placeholder}\n      />\n      {id !== 'password' && <i className=\"bx bx-error-circle\" />}\n      {id === 'password' && (\n        /* eslint-disable-next-line */\n        <i\n          className={classnames({\n            bx: true,\n            'bx-hide': !showPass,\n            'bx-show': showPass,\n          })}\n          onClick={() => setShowPass(!showPass)}\n        />\n      )}\n    </div>\n  );\n}\n\nInputWithStatus.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  val: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default InputWithStatus;\n","export default __webpack_public_path__ + \"static/media/en.a2a4a738.svg\";","export default __webpack_public_path__ + \"static/media/de.0a61e80b.svg\";","export default __webpack_public_path__ + \"static/media/fr.457edd56.svg\";","export default __webpack_public_path__ + \"static/media/tr.896aae45.svg\";","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport EN from './assets/flags/en.svg';\nimport DE from './assets/flags/de.svg';\nimport FR from './assets/flags/fr.svg';\nimport TR from './assets/flags/tr.svg';\n// import EN from './assets/flags/english.svg';\n// import DE from './assets/flags/german.svg';\n// import FR from './assets/flags/french.svg';\n// import TR from './assets/flags/turkish.svg';\n\nfunction FlagItem({ language }) {\n  const [currentFlag, setCurrentFlag] = useState(EN);\n  useEffect(() => {\n    let flag = EN;\n    switch (language) {\n      case 'EN':\n        flag = EN;\n        break;\n      case 'DE':\n        flag = DE;\n        break;\n      case 'FR':\n        flag = FR;\n        break;\n      case 'TR':\n        flag = TR;\n        break;\n      default:\n        flag = EN;\n        break;\n    }\n    setCurrentFlag(flag);\n  }, [language]);\n  return (\n    <img\n      src={currentFlag}\n      width=\"30\"\n      alt=\"language flag\"\n      style={{\n        borderRadius: '3px',\n      }}\n    />\n  );\n}\nFlagItem.propTypes = {\n  language: PropTypes.string.isRequired,\n};\nexport default FlagItem;\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Form,\n  Alert,\n  Button,\n  Input,\n  Label,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n} from 'reactstrap';\nimport InputWithStatus from './InputWithStatus';\nimport './Login.css';\nimport languages from './assets/languages.json';\nimport FlagItem from './FlagItem';\n\nfunction isEmail(email) {\n  // eslint-disable-next-line\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\n}\n\nfunction Login() {\n  // eslint-disable-next-line\n  const [language, setLanguage] = useState('EN');\n  const [theme, setTheme] = useState('light');\n  const [email, setEmail] = useState(localStorage.getItem('email') ?? '');\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [password, setPassword] = useState('');\n  // eslint-disable-next-line\n  const [error, setError] = useState(false);\n  // eslint-disable-next-line\n  const [loading, setLoading] = useState(false);\n\n  const [isEmailClicked, setIsEmailClicked] = useState(false);\n  const [isPasswordClicked, setIsPasswordClicked] = useState(false);\n  // eslint-disable-next-line\n  const [emailError, setEmailError] = useState('');\n  // eslint-disable-next-line\n  const [passwordError, setPasswordError] = useState('');\n  // eslint-disable-next-line\n  const [validations, setValidations] = useState([false, false, false, false, false]);\n\n  const [remember, setRemember] = useState(false);\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n      document.body.classList.remove('light-theme');\n      document.body.classList.add('dark-theme');\n    } else {\n      setTheme('light');\n      document.body.classList.remove('dark-theme');\n      document.body.classList.add('light-theme');\n    }\n  };\n  const setSuccessFor = (input) => {\n    const inputWithStatus = input.parentElement;\n    inputWithStatus.className = 'input-with-status';\n  };\n  const setErrorFor = (input) => {\n    const inputWithStatus = input.parentElement;\n    inputWithStatus.className = 'input-with-status error';\n  };\n\n  const handleSubmit = (e) => {\n    if (e !== undefined) {\n      console.log(email);\n      console.log(password);\n      if (isEmail(email)) {\n        console.log('valid email');\n      }\n      if (remember) {\n        localStorage.setItem('email', email);\n      }\n    }\n  };\n\n  const checkBeforeSubmit = (e = undefined) => {\n    if (e !== undefined) {\n      e.preventDefault();\n    }\n    const valids = [\n      (isEmail(email.trim())),\n      password.trim() !== '',\n    ];\n    setValidations(valids);\n    const filledAreas = valids.reduce((acc, cur) => acc + cur);\n\n    const emailEl = document.getElementById('email');\n    const passwordEl = document.getElementById('password');\n    if (isEmailClicked || e !== undefined) {\n      if (email.trim() === '') {\n        setErrorFor(emailEl);\n        setEmailError(languages.blankEmailError[language]);\n      } else if (!isEmail(email.trim())) {\n        setErrorFor(emailEl);\n        setEmailError(languages.invalidEmailError[language]);\n      } else {\n        setSuccessFor(emailEl);\n        setEmailError('');\n      }\n    }\n\n    if (isPasswordClicked || e !== undefined) {\n      if (password.trim() === '') {\n        setErrorFor(passwordEl);\n        setPasswordError(languages.blankPasswordError[language]);\n      } else {\n        setSuccessFor(passwordEl);\n        setPasswordError('');\n      }\n    }\n    if (filledAreas === 2) {\n      handleSubmit(e);\n    }\n  };\n\n  useEffect(() => {\n    checkBeforeSubmit();\n  }, [email, password]);\n\n  useEffect(() => {\n    document.title = languages.header[language];\n  }, [language]);\n\n  return (\n    <div className=\"login-container mx-0 px-4\">\n      <div className=\"w-100 pt-3 d-flex\">\n        <div className=\"d-flex ml-auto align-items-center\">\n          <Dropdown\n            color=\"danger\"\n            isOpen={isDropdownOpen}\n            toggle={() => { setIsDropdownOpen(!isDropdownOpen); }}\n          >\n            <DropdownToggle\n              caret\n              className=\"pl-3 d-flex align-items-center dropdown-toggle\"\n            >\n              <FlagItem language={language} />\n              &nbsp;&nbsp;\n              <span className=\"language-text\">\n                {language}\n              </span>\n            </DropdownToggle>\n            <DropdownMenu\n              className=\"dropdown-menu\"\n            >\n              <DropdownItem\n                className=\"dropdown-item\"\n                onClick={() => {\n                  setLanguage('EN');\n                }}\n              >\n                <FlagItem language=\"EN\" />\n                <span className=\"language-text\">&nbsp;&nbsp;English</span>\n              </DropdownItem>\n              <DropdownItem\n                className=\"dropdown-item\"\n                onClick={() => {\n                  setLanguage('DE');\n                }}\n              >\n                <FlagItem language=\"DE\" />\n                <span className=\"language-text\">&nbsp;&nbsp;Deutsch</span>\n              </DropdownItem>\n              <DropdownItem\n                className=\"dropdown-item\"\n                onClick={() => {\n                  setLanguage('FR');\n                }}\n              >\n                <FlagItem language=\"FR\" />\n                <span className=\"language-text\">&nbsp;&nbsp;Français</span>\n              </DropdownItem>\n              <DropdownItem\n                className=\"dropdown-item\"\n                onClick={() => {\n                  setLanguage('TR');\n                }}\n              >\n                <FlagItem language=\"TR\" />\n                <span className=\"language-text\">&nbsp;&nbsp;Türkçe</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          {/* eslint-disable-next-line */}\n        <label className=\"switch ml-4 mb-0\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            onChange={() => {\n              toggleTheme();\n            }}\n          />\n          <span className=\"slider round\" />\n          <i className={classnames({\n            bx: true,\n            'bxs-moon': theme === 'dark',\n            'bxs-sun': theme === 'light',\n            'theme-icon': true,\n          })}\n          />\n        </label>\n\n        </div>\n      </div>\n      <Row className=\"justify-content-center\">\n        <Col\n          className=\"pl-0 login-col pr-0\"\n        >\n          <Card\n            className=\"overflow-hidden login-card\"\n            style={{\n              borderRadius: '0px 4px 4px 0px',\n              width: '100%',\n            }}\n          >\n            <div>\n              <Row style={{\n                paddingTop: '17px',\n                paddingBottom: '15px',\n                height: '10px',\n              }}\n              >\n                <Col xs=\"12\">\n                  <div\n                    className=\"px-4 py-2 login-card-header\"\n                    style={{\n                      fontSize: '16px',\n                      fontWeight: 500,\n                      color: '#495057',\n                    }}\n                  >\n                    <h1>{languages.header[language]}</h1>\n                    <p\n                      style={{\n                        whiteSpace: 'pre-line',\n                      }}\n                    >\n                      {localStorage.getItem('email')\n                        ? languages.subheaderWelcome[language]\n                        : languages.subheader[language]}\n\n                    </p>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n            <CardBody\n              className=\"pt-4 login-cardbody\"\n              style={{\n                background: 'white',\n                borderRadius: '4px',\n              }}\n            >\n              <div className={classnames({\n                'p-2': true,\n                'pt-4': ['TR', 'EN'].includes(language),\n                'pt-5': ['DE', 'FR'].includes(language),\n              })}\n              >\n                <Form id=\"login-form\" className=\"form-horizontal\" onSubmit={checkBeforeSubmit}>\n                  <Alert className=\"mt-5 mb-0\" color=\"danger\" isOpen={error} toggle={() => setError(false)}>{languages.errorAfterSubmit[language]}</Alert>\n                  <div className=\"form-group\">\n                    <InputWithStatus\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      val={email}\n                      placeholder={languages.emailPlaceholder[language]}\n                      onChange={(e) => {\n                        setIsEmailClicked(true);\n                        setEmail(e.target.value);\n                      }}\n                    />\n                    <p className=\"error-text\">{emailError}</p>\n\n                  </div>\n                  <div className={classnames({\n                    'form-group': true,\n                    'pb-1': passwordError.length === 0,\n                  })}\n                  >\n                    <InputWithStatus\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      val={password}\n                      placeholder={languages.passwordPlaceholder[language]}\n                      onChange={(e) => {\n                        setIsPasswordClicked(true);\n                        setPassword(e.target.value);\n                      }}\n                    />\n                    <p className=\"error-text\">{passwordError}</p>\n\n                  </div>\n                  <Row className=\"mt-4\">\n                    <Col className=\"d-flex align-items-center remember-me\">\n                      <Input\n                        id=\"remember-me-checkbox\"\n                        name=\"remember-me\"\n                        type=\"checkbox\"\n                        onChange={(e) => {\n                          setRemember(e.target.checked);\n                        }}\n                      />\n                      <Label for=\"remember-me-checkbox\" className=\"btn-forgot text-muted\">\n                        { languages.rememberMe[language] }\n                      </Label>\n                    </Col>\n                    <Col className=\"btn-forgot\">\n                      <Button type=\"button\" color=\"link\" className=\"btn-link text-muted\">\n                        { languages.forgotPassword[language] }\n                      </Button>\n                    </Col>\n                  </Row>\n                  <div className=\"mt-4\">\n                    <Button\n                      id=\"signin-btn\"\n                      color=\"primary\"\n                      className=\"btn btn-primary btn-block waves-effect waves-light\"\n                      type=\"submit\"\n                      disabled={loading}\n                    >\n                      { languages.header[language] }\n                    </Button>\n                  </div>\n                  <Row className=\"mt-4\">\n                    <Col\n                      className=\"text-muted\"\n                      style={{\n                        fontWeight: 600,\n                      }}\n                    >\n                      <span>\n                        {languages.haveAccount[language]}\n                      &nbsp;\n                      </span>\n\n                      <Button\n                        type=\"button\"\n                        color=\"link\"\n                        className=\"btn-link\"\n                      >\n\n                        {languages.haveAccountButton[language]}\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport './App.css';\nimport Login from './Login';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}